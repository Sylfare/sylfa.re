---
import Section from '@components/Section.astro';
import SousPage from '@layouts/SousPage.astro';
import TrucsSympas from '@layouts/TrucsSympas.astro';
import TrucSympa from '@layouts/TrucSympa.astro';
import type { GetStaticPaths } from 'astro';
import { render } from 'astro/compiler-runtime';
import { getCollection } from 'astro:content';

export const getStaticPaths = (async (paginate) => {
    const trucsSympas = await getCollection('trucSympa');
    return paginate.paginate(trucsSympas, {pageSize: 10});
}) satisfies GetStaticPaths;

const trucsSympas = await getCollection('trucSympa');
const tags: {
    [index: string]: number
} = {}

trucsSympas.forEach(truc => truc.data.tags?.forEach(tag => 
    Object.hasOwn(tags, tag) ? tags[tag]++ : (tags[tag] = 1)
));
const trucsTries = trucsSympas.sort((a, b) => new Intl.Collator('fr').compare(a.data.nom, b.data.nom));

const { page } = Astro.props;


---
<TrucsSympas {page} trucs={trucsTries} tagCount={tags}>

</TrucsSympas>
